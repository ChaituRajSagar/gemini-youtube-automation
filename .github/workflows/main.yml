name: Generate and Upload Daily AI Video

on:
  schedule:
    - cron: '0 6 * * *' # 6:00 AM UTC (11:30 AM IST) daily
  workflow_dispatch: # Allows manual running

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # Caches dependencies for faster runs

      - name: üì¶ Install system and Python dependencies
        run: |
          # Update the system's package list
          sudo apt-get update
          
          # Install the system software
          sudo apt-get install -y imagemagick ffmpeg
          
          # --- DEFINITIVE FIX for ImageMagick Policy ---
          # On GitHub's servers, the default ImageMagick policy is too restrictive.
          # These commands find the policy file and increase the resource limits
          # to allow the creation of larger, long-form videos.
          sudo sed -i 's/rights="none" pattern="PS"/rights="read|write" pattern="PS"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/rights="none" pattern="XPS"/rights="read|write" pattern="XPS"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="resource" name="width" value=".*"\/>/<policy domain="resource" name="width" value="16KP"\/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="resource" name="height" value=".*"\/>/<policy domain="resource" name="height" value="16KP"\/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="resource" name="memory" value=".*"\/>/<policy domain="resource" name="memory" value="2GiB"\/>/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/<policy domain="resource" name="disk" value=".*"\/>/<policy domain="resource" name="disk" value="4GiB"\/>/' /etc/ImageMagick-6/policy.xml
          
          # Install Python packages
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîë Restore API credentials
        run: |
          echo "${{ secrets.CLIENT_SECRET_JSON }}" > client_secrets.json
          echo "${{ secrets.CREDENTIALS_JSON }}" > credentials.json
        shell: bash

      - name: üöÄ Run full automation pipeline
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: python main.py
